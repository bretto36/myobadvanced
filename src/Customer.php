<?php

namespace MyobAdvanced;

use Carbon\Carbon;
use MyobAdvanced\Customer\CustomerContact;

/**
 * @method string getAccountRef()
 * @method self setAccountRef(string $value)
 * @method bool getApplyOverdueCharges()
 * @method self setApplyOverdueCharges(bool $value)
 * @method bool getAutoApplyPayments()
 * @method self setAutoApplyPayments(bool $value)
 * @method bool getBillingAddressOverride()
 * @method self setBillingAddressOverride(bool $value)
 * @method bool getBillingContactOverride()
 * @method self setBillingContactOverride(bool $value)
 * @method Carbon getCreatedDateTime()
 * @method self setCreatedDateTime(Carbon $value)
 * @method string getCurrencyID()
 * @method self setCurrencyID(string $value)
 * @method string getCurrencyRateType()
 * @method self setCurrencyRateType(string $value)
 * @method string getCustomerClass()
 * @method self setCustomerClass(string $value)
 * @method string getCustomerID()
 * @method self setCustomerID(string $value)
 * @method string getCustomerName()
 * @method self setCustomerName(string $value)
 * @method bool getEnableCurrencyOverride()
 * @method self setEnableCurrencyOverride(bool $value)
 * @method bool getEnableRateOverride()
 * @method self setEnableRateOverride(bool $value)
 * @method bool getEnableWriteOffs()
 * @method self setEnableWriteOffs(bool $value)
 * @method string getFOBPoint()
 * @method self setFOBPoint(string $value)
 * @method Carbon getLastModifiedDateTime()
 * @method self setLastModifiedDateTime(Carbon $value)
 * @method int getLeadTimedays()
 * @method self setLeadTimedays(int $value)
 * @method string getLocationName()
 * @method self setLocationName(string $value)
 * @method bool getMultiCurrencyStatements()
 * @method self setMultiCurrencyStatements(bool $value)
 * @method int getOrderPriority()
 * @method self setOrderPriority(int $value)
 * @method string getParentRecord()
 * @method self setParentRecord(string $value)
 * @method string getPriceClassID()
 * @method self setPriceClassID(string $value)
 * @method bool getPrintDunningLetters()
 * @method self setPrintDunningLetters(bool $value)
 * @method bool getPrintInvoices()
 * @method self setPrintInvoices(bool $value)
 * @method bool getPrintStatements()
 * @method self setPrintStatements(bool $value)
 * @method bool getResidentialDelivery()
 * @method self setResidentialDelivery(bool $value)
 * @method bool getSaturdayDelivery()
 * @method self setSaturdayDelivery(bool $value)
 * @method bool getSendDunningLettersbyEmail()
 * @method self setSendDunningLettersbyEmail(bool $value)
 * @method bool getSendInvoicesbyEmail()
 * @method self setSendInvoicesbyEmail(bool $value)
 * @method bool getSendStatementsbyEmail()
 * @method self setSendStatementsbyEmail(bool $value)
 * @method bool getShippingAddressOverride()
 * @method self setShippingAddressOverride(bool $value)
 * @method string getShippingBranch()
 * @method self setShippingBranch(string $value)
 * @method bool getShippingContactOverride()
 * @method self setShippingContactOverride(bool $value)
 * @method string getShippingRule()
 * @method self setShippingRule(string $value)
 * @method string getShippingTerms()
 * @method self setShippingTerms(string $value)
 * @method string getShippingZoneID()
 * @method self setShippingZoneID(string $value)
 * @method string getShipVia()
 * @method self setShipVia(string $value)
 * @method string getStatementCycleID()
 * @method self setStatementCycleID(string $value)
 * @method string getStatementType()
 * @method self setStatementType(string $value)
 * @method string getStatus()
 * @method self setStatus(string $value)
 * @method string getTaxRegistrationID()
 * @method self setTaxRegistrationID(string $value)
 * @method string getTaxZone()
 * @method self setTaxZone(string $value)
 * @method string getTerms()
 * @method self setTerms(string $value)
 * @method string getWarehouseID()
 * @method self setWarehouseID(string $value)
 * @method float getWriteOffLimit()
 * @method self setWriteOffLimit(float $value)
 *
 * @method Attribute[] getAttributes()
 * @method self setAttributes(array $value)
 * @method Contact getBillingContact()
 * @method self setBillingContact(Contact $value)
 * @method Contact getMainContact()
 * @method self setMainContact(Contact $value)
 * @method Contact getPrimaryContact()
 * @method self setPrimaryContact(Contact $value)
 * @method Contact getShippingContact()
 * @method self setShippingContact(Contact $value)
 * @method CustomerContact[] getContacts()
 */
class Customer extends AbstractObject
{
    public $expands = [
        'Attributes'      => [Attribute::class],
        'BillingContact'  => Contact::class,
        'MainContact'     => Contact::class,
        'PrimaryContact'  => Contact::class,
        'ShippingContact' => Contact::class,
        'Contacts'        => [CustomerContact::class],
    ];
}